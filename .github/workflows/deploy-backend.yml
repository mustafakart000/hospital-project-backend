name: Deploy Backend
 
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Kodları Checkout Et
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    # Maven Bağımlılıklarının Doğru Yüklendiğini Doğrulamak  
    - name: Verify JWT Dependencies
      run: mvn dependency:tree | grep 'io.jsonwebtoken'
   
    # Gereksiz Cache Temizliği Yerine Daha Spesifik İşlem
    - name: Clear Specific GitHub Actions Cache
      run: |
        sudo rm -rf /home/runner/work/_actions/specific-folder  # Spesifik bir klasör temizlenmeli

    # Secrets Erişimini Test Et
    - name: Test Secrets Access
      run: echo "Secrets Erişimi Test Ediliyor"
      env:
        PASSWORD: ${{ secrets.SERVER_PASSWORD }}

    # Maven Build İşlemi
    - name: Build Backend
      run: mvn clean install

    # Expect Paketini Yükle
    - name: Install Expect if Missing
      run: |
        if ! command -v expect &> /dev/null; then
          sudo apt-get update && sudo apt-get install -y expect
        else
          echo "Expect already installed"
        fi

    # JAR Dosyasını Sunucuya Gönder
    - name: Transfer Backend
      run: |
       expect << EOF
       spawn scp target/hospital-management-0.0.1-SNAPSHOT.jar root@37.148.209.189:/home/ubuntu/
       expect {
         "Are you sure you want to continue connecting" { send "yes\r"; exp_continue }
         "password:" { send "${{ secrets.SERVER_PASSWORD }}\r" }
       }
       expect eof
       EOF

   
    - name: Check and Clear Port 8080
      run: |
        expect << EOF
        spawn ssh root@37.148.209.189
        expect {
          "Are you sure you want to continue connecting" { send "yes\r"; exp_continue }
          "password:" { send "${{ secrets.SERVER_PASSWORD }}\r" }
        }
        expect "~#"
        send "pid=\\\$(lsof -t -i:8080)\r"
        expect "~#"
        send "if \[ -n \\\"\\\$pid\" \]; then kill -9 \\\$pid; echo 'Killed process on port 8080'; fi\r"
        expect "~#"
        send "exit\r"
        expect eof
        EOF

    # Backend Sunucusunu Başlat
    - name: Start Backend on Server
      run: |
       expect << EOF
       spawn ssh root@37.148.209.189
       expect {
         "Are you sure you want to continue connecting" { send "yes\r"; exp_continue }
         "password:" { send "${{ secrets.SERVER_PASSWORD }}\r" }
       }
       expect "$ "
       send "nohup java -jar /home/ubuntu/hospital-management-0.0.1-SNAPSHOT.jar --spring.profiles.active=local > app.log 2>&1 &\r"
       expect "$ "
       send "exit\r"
       expect eof
       EOF
  # Uygulama Başlatma Kontrolü
    - name: Verify Application Start
      run: |
       expect << EOF
       spawn ssh root@37.148.209.189
       expect {
         "Are you sure you want to continue connecting" { send "yes\r"; exp_continue }
         "password:" { send "${{ secrets.SERVER_PASSWORD }}\r" }
       }
       expect "$ "
       send "timeout 30 bash -c 'until curl -s http://localhost:8080 > /dev/null; do sleep 2; done'\r"
       expect "$ "
       send "exit\r"
       expect eof
       EOF
